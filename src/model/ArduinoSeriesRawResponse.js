/**
 * Iot API
 * Collection of all public API endpoints.
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.1.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BatchQueryRawResponseSeriesMediaV1'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BatchQueryRawResponseSeriesMediaV1'));
  } else {
    // Browser globals (root is window)
    if (!root.IotApi) {
      root.IotApi = {};
    }
    root.IotApi.ArduinoSeriesRawResponse = factory(root.IotApi.ApiClient, root.IotApi.BatchQueryRawResponseSeriesMediaV1);
  }
}(this, function(ApiClient, BatchQueryRawResponseSeriesMediaV1) {
  'use strict';



  /**
   * The ArduinoSeriesRawResponse model module.
   * @module model/ArduinoSeriesRawResponse
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>ArduinoSeriesRawResponse</code>.
   * ArduinoSeriesRawResponse media type (default view)
   * @alias module:model/ArduinoSeriesRawResponse
   * @class
   * @param countValues {Number} Total number of values in the array 'values'
   * @param fromDate {Date} From date
   * @param query {String} Query of for the data
   * @param respVersion {Number} Response version
   * @param series {module:model/BatchQueryRawResponseSeriesMediaV1} 
   * @param sort {module:model/ArduinoSeriesRawResponse.SortEnum} Sorting
   * @param status {String} Status of the response
   * @param times {Array.<Date>} Timestamp in RFC3339
   * @param toDate {Date} To date
   * @param values {Array.<Object>} Values can be in Float, String, Bool, Object
   */
  var exports = function(countValues, fromDate, query, respVersion, series, sort, status, times, toDate, values) {
    var _this = this;

    _this['count_values'] = countValues;
    _this['from_date'] = fromDate;
    _this['query'] = query;
    _this['resp_version'] = respVersion;
    _this['series'] = series;
    _this['sort'] = sort;
    _this['status'] = status;
    _this['times'] = times;
    _this['to_date'] = toDate;
    _this['values'] = values;
  };

  /**
   * Constructs a <code>ArduinoSeriesRawResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ArduinoSeriesRawResponse} obj Optional instance to populate.
   * @return {module:model/ArduinoSeriesRawResponse} The populated <code>ArduinoSeriesRawResponse</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('count_values')) {
        obj['count_values'] = ApiClient.convertToType(data['count_values'], 'Number');
      }
      if (data.hasOwnProperty('from_date')) {
        obj['from_date'] = ApiClient.convertToType(data['from_date'], 'Date');
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
      if (data.hasOwnProperty('query')) {
        obj['query'] = ApiClient.convertToType(data['query'], 'String');
      }
      if (data.hasOwnProperty('resp_version')) {
        obj['resp_version'] = ApiClient.convertToType(data['resp_version'], 'Number');
      }
      if (data.hasOwnProperty('series')) {
        obj['series'] = BatchQueryRawResponseSeriesMediaV1.constructFromObject(data['series']);
      }
      if (data.hasOwnProperty('series_limit')) {
        obj['series_limit'] = ApiClient.convertToType(data['series_limit'], 'Number');
      }
      if (data.hasOwnProperty('sort')) {
        obj['sort'] = ApiClient.convertToType(data['sort'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('times')) {
        obj['times'] = ApiClient.convertToType(data['times'], ['Date']);
      }
      if (data.hasOwnProperty('to_date')) {
        obj['to_date'] = ApiClient.convertToType(data['to_date'], 'Date');
      }
      if (data.hasOwnProperty('values')) {
        obj['values'] = ApiClient.convertToType(data['values'], [Object]);
      }
    }
    return obj;
  }

  /**
   * Total number of values in the array 'values'
   * @member {Number} count_values
   */
  exports.prototype['count_values'] = undefined;
  /**
   * From date
   * @member {Date} from_date
   */
  exports.prototype['from_date'] = undefined;
  /**
   * If the response is different than 'ok'
   * @member {String} message
   * @default ''
   */
  exports.prototype['message'] = '';
  /**
   * Query of for the data
   * @member {String} query
   */
  exports.prototype['query'] = undefined;
  /**
   * Response version
   * @member {Number} resp_version
   */
  exports.prototype['resp_version'] = undefined;
  /**
   * @member {module:model/BatchQueryRawResponseSeriesMediaV1} series
   */
  exports.prototype['series'] = undefined;
  /**
   * Max of values
   * @member {Number} series_limit
   */
  exports.prototype['series_limit'] = undefined;
  /**
   * Sorting
   * @member {module:model/ArduinoSeriesRawResponse.SortEnum} sort
   */
  exports.prototype['sort'] = undefined;
  /**
   * Status of the response
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * Timestamp in RFC3339
   * @member {Array.<Date>} times
   */
  exports.prototype['times'] = undefined;
  /**
   * To date
   * @member {Date} to_date
   */
  exports.prototype['to_date'] = undefined;
  /**
   * Values can be in Float, String, Bool, Object
   * @member {Array.<Object>} values
   */
  exports.prototype['values'] = undefined;


  /**
   * Allowed values for the <code>sort</code> property.
   * @enum {String}
   * @readonly
   */
  exports.SortEnum = {
    /**
     * value: "ASC"
     * @const
     */
    "ASC": "ASC",
    /**
     * value: "DESC"
     * @const
     */
    "DESC": "DESC"  };


  return exports;
}));


