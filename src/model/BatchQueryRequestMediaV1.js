/**
 * Iot API
 * Collection of all public API endpoints.
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.1.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.IotApi) {
      root.IotApi = {};
    }
    root.IotApi.BatchQueryRequestMediaV1 = factory(root.IotApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The BatchQueryRequestMediaV1 model module.
   * @module model/BatchQueryRequestMediaV1
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>BatchQueryRequestMediaV1</code>.
   * @alias module:model/BatchQueryRequestMediaV1
   * @class
   * @param from {Date} From timestamp
   * @param q {String} Query
   * @param to {Date} To timestamp
   */
  var exports = function(from, q, to) {
    var _this = this;

    _this['from'] = from;
    _this['q'] = q;
    _this['to'] = to;
  };

  /**
   * Constructs a <code>BatchQueryRequestMediaV1</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BatchQueryRequestMediaV1} obj Optional instance to populate.
   * @return {module:model/BatchQueryRequestMediaV1} The populated <code>BatchQueryRequestMediaV1</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('from')) {
        obj['from'] = ApiClient.convertToType(data['from'], 'Date');
      }
      if (data.hasOwnProperty('interval')) {
        obj['interval'] = ApiClient.convertToType(data['interval'], 'Number');
      }
      if (data.hasOwnProperty('q')) {
        obj['q'] = ApiClient.convertToType(data['q'], 'String');
      }
      if (data.hasOwnProperty('series_limit')) {
        obj['series_limit'] = ApiClient.convertToType(data['series_limit'], 'Number');
      }
      if (data.hasOwnProperty('to')) {
        obj['to'] = ApiClient.convertToType(data['to'], 'Date');
      }
    }
    return obj;
  }

  /**
   * From timestamp
   * @member {Date} from
   */
  exports.prototype['from'] = undefined;
  /**
   * Resolution in seconds
   * @member {Number} interval
   */
  exports.prototype['interval'] = undefined;
  /**
   * Query
   * @member {String} q
   */
  exports.prototype['q'] = undefined;
  /**
   * Max of values
   * @member {Number} series_limit
   */
  exports.prototype['series_limit'] = undefined;
  /**
   * To timestamp
   * @member {Date} to
   */
  exports.prototype['to'] = undefined;



  return exports;
}));


