/**
 * Iot API
 * Collection of all public API endpoints.
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.1.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.IotApi) {
      root.IotApi = {};
    }
    root.IotApi.CreateThingsV2Payload = factory(root.IotApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The CreateThingsV2Payload model module.
   * @module model/CreateThingsV2Payload
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>CreateThingsV2Payload</code>.
   * ThingPayload describes a thing
   * @alias module:model/CreateThingsV2Payload
   * @class
   * @param name {String} The friendly name of the thing
   */
  var exports = function(name) {
    var _this = this;

    _this['name'] = name;
  };

  /**
   * Constructs a <code>CreateThingsV2Payload</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateThingsV2Payload} obj Optional instance to populate.
   * @return {module:model/CreateThingsV2Payload} The populated <code>CreateThingsV2Payload</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('device_id')) {
        obj['device_id'] = ApiClient.convertToType(data['device_id'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('webhook_active')) {
        obj['webhook_active'] = ApiClient.convertToType(data['webhook_active'], 'Boolean');
      }
      if (data.hasOwnProperty('webhook_uri')) {
        obj['webhook_uri'] = ApiClient.convertToType(data['webhook_uri'], 'String');
      }
    }
    return obj;
  }

  /**
   * The arn of the associated device
   * @member {String} device_id
   */
  exports.prototype['device_id'] = undefined;
  /**
   * The id of the thing
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The friendly name of the thing
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Webhook uri
   * @member {Boolean} webhook_active
   */
  exports.prototype['webhook_active'] = undefined;
  /**
   * Webhook uri
   * @member {String} webhook_uri
   */
  exports.prototype['webhook_uri'] = undefined;



  return exports;
}));


