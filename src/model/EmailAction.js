/**
 * Arduino IoT Cloud API
 * Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BodyExpression from './BodyExpression';
import EmailDeliveryOpts from './EmailDeliveryOpts';
import TitleExpression from './TitleExpression';

/**
 * The EmailAction model module.
 * @module model/EmailAction
 * @version 3.0.0
 */
class EmailAction {
    /**
     * Constructs a new <code>EmailAction</code>.
     * @alias module:model/EmailAction
     * @param body {module:model/BodyExpression} 
     * @param delivery {module:model/EmailDeliveryOpts} 
     * @param subject {module:model/TitleExpression} 
     */
    constructor(body, delivery, subject) { 
        
        EmailAction.initialize(this, body, delivery, subject);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, body, delivery, subject) { 
        obj['body'] = body;
        obj['delivery'] = delivery;
        obj['subject'] = subject;
    }

    /**
     * Constructs a <code>EmailAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmailAction} obj Optional instance to populate.
     * @return {module:model/EmailAction} The populated <code>EmailAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmailAction();

            if (data.hasOwnProperty('body')) {
                obj['body'] = BodyExpression.constructFromObject(data['body']);
            }
            if (data.hasOwnProperty('delivery')) {
                obj['delivery'] = EmailDeliveryOpts.constructFromObject(data['delivery']);
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = TitleExpression.constructFromObject(data['subject']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmailAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmailAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EmailAction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `body`
        if (data['body']) { // data not null
          BodyExpression.validateJSON(data['body']);
        }
        // validate the optional field `delivery`
        if (data['delivery']) { // data not null
          EmailDeliveryOpts.validateJSON(data['delivery']);
        }
        // validate the optional field `subject`
        if (data['subject']) { // data not null
          TitleExpression.validateJSON(data['subject']);
        }

        return true;
    }


}

EmailAction.RequiredProperties = ["body", "delivery", "subject"];

/**
 * @member {module:model/BodyExpression} body
 */
EmailAction.prototype['body'] = undefined;

/**
 * @member {module:model/EmailDeliveryOpts} delivery
 */
EmailAction.prototype['delivery'] = undefined;

/**
 * @member {module:model/TitleExpression} subject
 */
EmailAction.prototype['subject'] = undefined;






export default EmailAction;

