/**
 * Iot API
 * Collection of all public API endpoints.
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.1.2
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ArduinoSeriesBatch', 'model/ArduinoSeriesRawBatch', 'model/ArduinoSeriesRawBatchLastvalue', 'model/BatchLastValueRequestsMediaV1', 'model/BatchQueryRawRequestsMediaV1', 'model/BatchQueryRequestsMediaV1', 'model/Error'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ArduinoSeriesBatch'), require('../model/ArduinoSeriesRawBatch'), require('../model/ArduinoSeriesRawBatchLastvalue'), require('../model/BatchLastValueRequestsMediaV1'), require('../model/BatchQueryRawRequestsMediaV1'), require('../model/BatchQueryRequestsMediaV1'), require('../model/Error'));
  } else {
    // Browser globals (root is window)
    if (!root.IotApi) {
      root.IotApi = {};
    }
    root.IotApi.SeriesV2Api = factory(root.IotApi.ApiClient, root.IotApi.ArduinoSeriesBatch, root.IotApi.ArduinoSeriesRawBatch, root.IotApi.ArduinoSeriesRawBatchLastvalue, root.IotApi.BatchLastValueRequestsMediaV1, root.IotApi.BatchQueryRawRequestsMediaV1, root.IotApi.BatchQueryRequestsMediaV1, root.IotApi.Error);
  }
}(this, function(ApiClient, ArduinoSeriesBatch, ArduinoSeriesRawBatch, ArduinoSeriesRawBatchLastvalue, BatchLastValueRequestsMediaV1, BatchQueryRawRequestsMediaV1, BatchQueryRequestsMediaV1, Error) {
  'use strict';

  /**
   * SeriesV2 service.
   * @module api/SeriesV2Api
   * @version 0.0.1
   */

  /**
   * Constructs a new SeriesV2Api. 
   * @alias module:api/SeriesV2Api
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * batch_query series_v2
     * Returns the batch of time-series data
     * @param {module:model/BatchQueryRequestsMediaV1} batchQueryRequestsMediaV1 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ArduinoSeriesBatch} and HTTP response
     */
    this.seriesV2BatchQueryWithHttpInfo = function(batchQueryRequestsMediaV1) {
      var postBody = batchQueryRequestsMediaV1;
      // verify the required parameter 'batchQueryRequestsMediaV1' is set
      if (batchQueryRequestsMediaV1 === undefined || batchQueryRequestsMediaV1 === null) {
        throw new Error("Missing the required parameter 'batchQueryRequestsMediaV1' when calling seriesV2BatchQuery");
      }

      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/vnd.arduino.series.batch+json', 'application/vnd.goa.error+json'];
      var returnType = ArduinoSeriesBatch;
      return this.apiClient.callApi(
        '/v2/series/batch_query', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * batch_query series_v2
     * Returns the batch of time-series data
     * @param {module:model/BatchQueryRequestsMediaV1} batchQueryRequestsMediaV1 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ArduinoSeriesBatch}
     */
    this.seriesV2BatchQuery = function(batchQueryRequestsMediaV1) {
      return this.seriesV2BatchQueryWithHttpInfo(batchQueryRequestsMediaV1)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * batch_query_raw series_v2
     * Returns the batch of time-series data raw
     * @param {module:model/BatchQueryRawRequestsMediaV1} batchQueryRawRequestsMediaV1 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ArduinoSeriesRawBatch} and HTTP response
     */
    this.seriesV2BatchQueryRawWithHttpInfo = function(batchQueryRawRequestsMediaV1) {
      var postBody = batchQueryRawRequestsMediaV1;
      // verify the required parameter 'batchQueryRawRequestsMediaV1' is set
      if (batchQueryRawRequestsMediaV1 === undefined || batchQueryRawRequestsMediaV1 === null) {
        throw new Error("Missing the required parameter 'batchQueryRawRequestsMediaV1' when calling seriesV2BatchQueryRaw");
      }

      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/vnd.arduino.series.raw.batch+json', 'application/vnd.goa.error+json'];
      var returnType = ArduinoSeriesRawBatch;
      return this.apiClient.callApi(
        '/v2/series/batch_query_raw', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * batch_query_raw series_v2
     * Returns the batch of time-series data raw
     * @param {module:model/BatchQueryRawRequestsMediaV1} batchQueryRawRequestsMediaV1 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ArduinoSeriesRawBatch}
     */
    this.seriesV2BatchQueryRaw = function(batchQueryRawRequestsMediaV1) {
      return this.seriesV2BatchQueryRawWithHttpInfo(batchQueryRawRequestsMediaV1)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * batch_query_raw_last_value series_v2
     * Returns the batch of time-series data raw
     * @param {module:model/BatchLastValueRequestsMediaV1} batchLastValueRequestsMediaV1 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ArduinoSeriesRawBatchLastvalue} and HTTP response
     */
    this.seriesV2BatchQueryRawLastValueWithHttpInfo = function(batchLastValueRequestsMediaV1) {
      var postBody = batchLastValueRequestsMediaV1;
      // verify the required parameter 'batchLastValueRequestsMediaV1' is set
      if (batchLastValueRequestsMediaV1 === undefined || batchLastValueRequestsMediaV1 === null) {
        throw new Error("Missing the required parameter 'batchLastValueRequestsMediaV1' when calling seriesV2BatchQueryRawLastValue");
      }

      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/vnd.arduino.series.raw.batch.lastvalue+json', 'application/vnd.goa.error+json'];
      var returnType = ArduinoSeriesRawBatchLastvalue;
      return this.apiClient.callApi(
        '/v2/series/batch_query_raw/lastvalue', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * batch_query_raw_last_value series_v2
     * Returns the batch of time-series data raw
     * @param {module:model/BatchLastValueRequestsMediaV1} batchLastValueRequestsMediaV1 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ArduinoSeriesRawBatchLastvalue}
     */
    this.seriesV2BatchQueryRawLastValue = function(batchLastValueRequestsMediaV1) {
      return this.seriesV2BatchQueryRawLastValueWithHttpInfo(batchLastValueRequestsMediaV1)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
