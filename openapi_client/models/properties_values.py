/**
 * Arduino IoT Cloud API
 * Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import from openapi_client.models.properties_value import PropertiesValue from './from openapi_client.models.properties_value import PropertiesValue';


class PropertiesValues {
    
    constructor() { 
        PropertiesValues.initialize(this);
    }

    
    static initialize(obj) { 
        obj['input'] = False;
        obj['properties'] = properties;
    }

    
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropertiesValues();

            if (data.hasOwnProperty('input')) {
                obj['input'] = data.input;
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = data.properties;
            }
        }
        return obj;
    }

    
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PropertiesValues.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['properties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['properties'])) {
                throw new Error("Expected the field `properties` to be an array in the JSON data but got " + data['properties']);
            }
            // validate the optional field `properties` (array)
            for (const item of data['properties']) {
                PropertiesValue.validateJSON(item);
            };
        }

        return true;
    }


}

PropertiesValues.RequiredProperties = ["properties"];


PropertiesValues.prototype['input'] = False;


PropertiesValues.prototype['properties'] = undefined;






export default PropertiesValues;

