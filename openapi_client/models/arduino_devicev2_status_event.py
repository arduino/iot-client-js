/**
 * Arduino IoT Cloud API
 * Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';


class ArduinoDevicev2StatusEvent {
    
    constructor() { 
        ArduinoDevicev2StatusEvent.initialize(this);
    }

    
    static initialize(obj) { 
        obj['updated_at'] = updated_at;
        obj['value'] = value;
    }

    
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArduinoDevicev2StatusEvent();

            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = data.updated_at;
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = data.value;
            }
        }
        return obj;
    }

    
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ArduinoDevicev2StatusEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

ArduinoDevicev2StatusEvent.RequiredProperties = ["updated_at", "value"];


ArduinoDevicev2StatusEvent.prototype['updated_at'] = undefined;


ArduinoDevicev2StatusEvent.prototype['value'] = undefined;






ArduinoDevicev2StatusEvent['ValueEnum'] = {

    
    "&#39;CONNECTED&#39;": 'CONNECTED',

    
    "&#39;DISCONNECTED&#39;": 'DISCONNECTED'
};



export default ArduinoDevicev2StatusEvent;

