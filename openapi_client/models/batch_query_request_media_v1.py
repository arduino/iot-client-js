/**
 * Arduino IoT Cloud API
 * Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';


class BatchQueryRequestMediaV1 {
    
    constructor() { 
        BatchQueryRequestMediaV1.initialize(this);
    }

    
    static initialize(obj) { 
        obj['from'] = var_from;
        obj['q'] = q;
        obj['to'] = to;
    }

    
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchQueryRequestMediaV1();

            if (data.hasOwnProperty('aggregation')) {
                obj['aggregation'] = data.aggregation;
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = data.from;
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = data.interval;
            }
            if (data.hasOwnProperty('q')) {
                obj['q'] = data.q;
            }
            if (data.hasOwnProperty('series_limit')) {
                obj['series_limit'] = data.series_limit;
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = data.to;
            }
        }
        return obj;
    }

    
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BatchQueryRequestMediaV1.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['aggregation'] && !(typeof data['aggregation'] === 'string' || data['aggregation'] instanceof String)) {
            throw new Error("Expected the field `aggregation` to be a primitive type in the JSON string but got " + data['aggregation']);
        }
        // ensure the json data is a string
        if (data['q'] && !(typeof data['q'] === 'string' || data['q'] instanceof String)) {
            throw new Error("Expected the field `q` to be a primitive type in the JSON string but got " + data['q']);
        }

        return true;
    }


}

BatchQueryRequestMediaV1.RequiredProperties = ["from", "q", "to"];


BatchQueryRequestMediaV1.prototype['aggregation'] = undefined;


BatchQueryRequestMediaV1.prototype['from'] = undefined;


BatchQueryRequestMediaV1.prototype['interval'] = undefined;


BatchQueryRequestMediaV1.prototype['q'] = undefined;


BatchQueryRequestMediaV1.prototype['series_limit'] = undefined;


BatchQueryRequestMediaV1.prototype['to'] = undefined;






BatchQueryRequestMediaV1['AggregationEnum'] = {

    
    "&#39;AVG&#39;": 'AVG',

    
    "&#39;MIN&#39;": 'MIN',

    
    "&#39;MAX&#39;": 'MAX',

    
    "&#39;SUM&#39;": 'SUM',

    
    "&#39;COUNT&#39;": 'COUNT',

    
    "&#39;PCT_99&#39;": 'PCT_99',

    
    "&#39;PCT_95&#39;": 'PCT_95',

    
    "&#39;PCT_90&#39;": 'PCT_90',

    
    "&#39;PCT_75&#39;": 'PCT_75',

    
    "&#39;PCT_50&#39;": 'PCT_50',

    
    "&#39;PCT_15&#39;": 'PCT_15',

    
    "&#39;PCT_5&#39;": 'PCT_5',

    
    "&#39;BOOL_OR&#39;": 'BOOL_OR',

    
    "&#39;BOOL_AND&#39;": 'BOOL_AND'
};



export default BatchQueryRequestMediaV1;

