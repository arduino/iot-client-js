/**
 * Arduino IoT Cloud API
 * Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';


class ArduinoDevicev2propertyvalueValueStatistics {
    
    constructor() { 
        ArduinoDevicev2propertyvalueValueStatistics.initialize(this);
    }

    
    static initialize(obj) { 
    }

    
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArduinoDevicev2propertyvalueValueStatistics();

            if (data.hasOwnProperty('adr')) {
                obj['adr'] = data.adr;
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = data.channel;
            }
            if (data.hasOwnProperty('duplicate')) {
                obj['duplicate'] = data.duplicate;
            }
            if (data.hasOwnProperty('freq')) {
                obj['freq'] = data.freq;
            }
            if (data.hasOwnProperty('modBW')) {
                obj['modBW'] = data.modBW;
            }
            if (data.hasOwnProperty('rssi')) {
                obj['rssi'] = data.rssi;
            }
            if (data.hasOwnProperty('seqno')) {
                obj['seqno'] = data.seqno;
            }
            if (data.hasOwnProperty('sf')) {
                obj['sf'] = data.sf;
            }
            if (data.hasOwnProperty('snr')) {
                obj['snr'] = data.snr;
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = data.time;
            }
        }
        return obj;
    }

    
    static validateJSON(data) {

        return true;
    }


}




ArduinoDevicev2propertyvalueValueStatistics.prototype['adr'] = undefined;


ArduinoDevicev2propertyvalueValueStatistics.prototype['channel'] = undefined;


ArduinoDevicev2propertyvalueValueStatistics.prototype['duplicate'] = undefined;


ArduinoDevicev2propertyvalueValueStatistics.prototype['freq'] = undefined;


ArduinoDevicev2propertyvalueValueStatistics.prototype['modBW'] = undefined;


ArduinoDevicev2propertyvalueValueStatistics.prototype['rssi'] = undefined;


ArduinoDevicev2propertyvalueValueStatistics.prototype['seqno'] = undefined;


ArduinoDevicev2propertyvalueValueStatistics.prototype['sf'] = undefined;


ArduinoDevicev2propertyvalueValueStatistics.prototype['snr'] = undefined;


ArduinoDevicev2propertyvalueValueStatistics.prototype['time'] = undefined;






export default ArduinoDevicev2propertyvalueValueStatistics;

