/**
 * Arduino IoT Cloud API
 * Provides a set of endpoints to manage Arduino IoT Cloud **Devices**, **Things**, **Properties** and **Timeseries**. This API can be called just with any HTTP Client, or using one of these clients:  * [Javascript NPM package](https://www.npmjs.com/package/@arduino/arduino-iot-client)  * [Python PYPI Package](https://pypi.org/project/arduino-iot-client/)  * [Golang Module](https://github.com/arduino/iot-client-go)
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import from openapi_client.models.arduino_series_raw_response import ArduinoSeriesRawResponse from './from openapi_client.models.arduino_series_raw_response import ArduinoSeriesRawResponse';


class ArduinoSeriesRawBatch {
    
    constructor() { 
        ArduinoSeriesRawBatch.initialize(this);
    }

    
    static initialize(obj) { 
        obj['resp_version'] = resp_version;
        obj['responses'] = responses;
    }

    
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArduinoSeriesRawBatch();

            if (data.hasOwnProperty('resp_version')) {
                obj['resp_version'] = data.resp_version;
            }
            if (data.hasOwnProperty('responses')) {
                obj['responses'] = data.responses;
            }
        }
        return obj;
    }

    
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ArduinoSeriesRawBatch.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['responses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['responses'])) {
                throw new Error("Expected the field `responses` to be an array in the JSON data but got " + data['responses']);
            }
            // validate the optional field `responses` (array)
            for (const item of data['responses']) {
                ArduinoSeriesRawResponse.validateJSON(item);
            };
        }

        return true;
    }


}

ArduinoSeriesRawBatch.RequiredProperties = ["resp_version", "responses"];


ArduinoSeriesRawBatch.prototype['resp_version'] = undefined;


ArduinoSeriesRawBatch.prototype['responses'] = undefined;






export default ArduinoSeriesRawBatch;

